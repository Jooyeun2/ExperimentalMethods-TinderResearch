df.te <- TinderUsers[-index.tr,]
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
pred.te <-  predict(mymod, TinderUsers)
plot(TinderUsers$Group, pred.te)
pred.te
library(caret)
TinderUsers$Group
confusionMatrix(data=pred.te$predictions, reference = TinderUsers$Group)
summary(mymod)
broom::tidy(mymod) %>%
mutate(p.value = paste(round(p.value, 4), pval_star(p.value))) %>%
select(-statistic) %>%
kable(
caption = "Significance of the body impulsiveness score", digits = 2
) %>%
kable_styling(
bootstrap_options = "striped"
)
plot(TinderUsers$Group, pred.te)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "binomial", data = TinderUsers)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link="logit"), data = TinderUsers)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link="glm"), data = TinderUsers)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link="cauchit"), data = TinderUsers)
TUser <- df_full %>% filter(Group == "0")
User <- df_full %>% filter(Group == "1")
TinderUsers <- rbind2(TUser,User, deparse.level = 0)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link=""), data = TinderUsers)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link="probit"), data = TinderUsers)
TinderUsers <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link="logit"), data = TinderUsers)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link="cauchit"), data = TinderUsers)
TinderUsers <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link="cauchit"), data = TinderUsers)
TinderUsers <- rbind2(TUser,User, deparse.level = 0)
TUser <- df_full %>% filter(Group == "0")
User <- df_full %>% filter(Group == "1")
TinderUsers <- rbind2(TUser,User, deparse.level = 0)
TinderUsers <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
index.tr <- sample(size=round(0.8*length(TinderUsers)), x=c(1:length(TinderUsers)), replace=FALSE)
df.tr <- TinderUsers[index.tr,]
df.te <- TinderUsers[-index.tr,]
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link="cauchit"), data = TinderUsers)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
TinderUsers <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
index.tr <- sample(size=round(0.8*length(TinderUsers)), x=c(1:length(TinderUsers)), replace=FALSE)
df.tr <- TinderUsers[index.tr,]
df.te <- TinderUsers[-index.tr,]
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
library(tidyverse)
df_full$Group <- recode_factor(df_full$Group,
NonUser = 1,
TNonUser = 2,
User = 3,
TUser = 4)
TNonUser <- df_full %>% filter(Group == "2")
NonUser <- df_full %>% filter(Group == "1")
TUser <- df_full %>% filter(Group == "4")
User <- df_full %>% filter(Group == "3")
TinderUsers <- rbind2(TUser,User, deparse.level = 0)
mymodUserSES <- lm(SESscore ~ Group, data = df_full)
library(tidyverse)
df_full$Group <- recode_factor(df_full$Group,
NonUser = 1,
TNonUser = 2,
User = 3,
TUser = 4)
TNonUser <- df_full %>% filter(Group == "2")
NonUser <- df_full %>% filter(Group == "1")
TUser <- df_full %>% filter(Group == "4")
User <- df_full %>% filter(Group == "3")
TinderUsers <- rbind2(TUser,User, deparse.level = 0)
mymodUserSES <- lm(SESscore ~ Group, data = df_full)
set.seed(1234)
ses_score <- df %>%
mutate(N = n()) %>%
summarize(SelfEsteemScore = sum(SESscore)/N) %>% unique()
bas_score <- df %>%
mutate(N = n()) %>%
summarize(BASScore = sum(BASscore)/N) %>% unique()
ais_score <- df %>%
mutate(N = n()) %>%
summarize(AISScore= sum(AISscore)/N) %>% unique()
scores <- left_join(ses_score,bas_score)
scores <- left_join(scores, ais_score)
scores <- scores[c(1, 2, 4, 3),]
scores %>%  t() %>% kable() %>% kable_styling()
library(tidyverse)
df_full$Group <- recode_factor(df_full$Group,
NonUser = 1,
TNonUser = 2,
User = 3,
TUser = 4)
TNonUser <- df_full %>% filter(Group == "2")
NonUser <- df_full %>% filter(Group == "1")
TUser <- df_full %>% filter(Group == "4")
User <- df_full %>% filter(Group == "3")
TinderUsers <- rbind2(TUser,User, deparse.level = 0)
mymodUserSES <- lm(SESscore ~ Group, data = df_full)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(kableExtra)
mdata <- read.csv2(here::here("DataTinder.csv"))
qq<-nrow(mdata)
mydata <- mdata %>% filter(Age > 17, Age <27)
pp<-nrow(mydata)
pval_star <- function (p, cutoffs = c(0.05, 0.01, 0.001)) {
stopifnot(length(cutoffs) == 3)
if (length(p) > 1) {
sapply(p, pval_star, cutoffs = cutoffs)
}
else {
ifelse(p > cutoffs[1], "", ifelse(p > cutoffs[2],
" *",
ifelse(p > cutoffs[3],
" **",
" ***")))
}
}
set.seed((1234))
j <- mydata %>% group_by(Group) %>%
mutate(SocializingScore= (Socialiazing1+Socialiazing2)/2) %>%
mutate(SocPressureScore= (SocPress1+Socpress2)/2) %>%
mutate(SocApprovalScore= (Socapprov1 + Socapprov2)/2) %>%
mutate(EntertainmentScore= (Entertain2+Entetain1)/2) %>%
mutate(PassTimeScore= (PassTime1+PassTime2)/2) %>%
mutate(RelSeekingScore= (RelSeek1+RelSeek2)/2) %>%
mutate(InfoSeekingScore= (InfoSeek1+InfoSeek2)/2) %>%
mutate(SexualExpScore= (SexualExp1+SexualExp2+SexualExp3)/3) %>%
mutate(SESscore= Rosenberg1+Rosenberg2+Rosenberg3+Rosenberg4+Rosenberg5+Rosenberg6+Rosenberg7+Rosenberg8+Rosenberg9+Rosenberg10) %>%
mutate(BASscore = (BAS1 + BAS2 + BAS3 + BAS4 + BAS5 + BAS6 + BAS7 + BAS8 + BAS9 + BAS10 + BAS11 + BAS12 + BAS13)) %>%
mutate(AIS_Attention = (Attention1+Attention2+Attention3+Attention4)/4) %>%
mutate(AIS_Motor = (Motor1+Motor2+Motor3)/3) %>%
mutate(AIS_FuturePlan = (FuturePlan1+FuturePlan2+FuturePlan3+FuturePlan4) /4) %>%
mutate(AISscore = AIS_Attention+AIS_FuturePlan+AIS_Motor)
df <- j %>% subset(select =c(1:11,66:79))
df1 <- df %>% filter(Group == "User" | Group == "TUser") %>% subset(select = c(1,12:19))
df1$TinderMainScore <- names(df1)[-1][max.col(df1[-1])]
TinderMainMotive <- as.factor(df1$TinderMainScore)
df_full<- left_join(df,df1)
df1 %>%
group_by(TinderMainScore) %>%
summarise(n = n()) %>%
ggplot(aes(x= reorder(TinderMainScore, -n) ,y= n, fill= TinderMainScore)) +
geom_bar(stat="identity",alpha=0.8) +
coord_flip() +
labs(
title = "Tinder users' computed main motivations",
subtitle = "The three main motives being information seeking, social pressure and approval",
x = "First motivation",
y = "Number of users") +
geom_text(aes(label = n), size = 5, hjust = 3, vjust = 0, position = "stack")
set.seed(1234)
df_full %>% filter(Group == "User" | Group == "TUser") %>%
group_by(Age, TinderMainScore) %>%
ggplot(aes(TinderMainScore,Age, fill= TinderMainScore)) +
geom_point(aes(color = TinderMainScore)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size =10)) +
labs(
title = "Type of relationship per age among Tinder Users subset",
subtitle = "Relation seeking seems to be a motive for younger Users",
y="Age",
x="Main motivation to have joined Tinder"
)
set.seed(1234)
dfUser <- df_full %>% filter(Group == c("User", "TUser")) %>%group_by(TinderMainScore)
plot1<- df %>% filter(Group == "User" | Group == "TUser") %>%
group_by(Age, Relationship, Group) %>%
ggplot(aes( x = Age, Relationship)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size =10)) +
labs(
title = "Type of relationship per age among Tinder Users subset",
subtitle = "The average service is slighty longer for men",
y="Types of relationship"
)
plot2 <- df %>% filter(Group == "NonUser" | Group == "TNonUser") %>%
group_by(Age, Relationship, Group) %>%
ggplot(aes( x = Age, Relationship)) +
geom_point(aes(color = "red")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size =10)) +
labs(
title = "Type of relationship per age among Non Users subset",
subtitle = "The average service is slighty longer for men",
y="Types of relationship"
)
gridExtra::grid.arrange(plot1,plot2)
set.seed(1234)
pl1 <- df_full %>% group_by(Group) %>%
ggplot(aes(x=SESscore,y=Group, color=Group ))+
geom_boxplot() +
labs (
subtitle = "Non-Users have higher self-esteem scores, whereas \nTinder Users experimental group has a significant lower score",
x= "SES score",
y= "Group of Users"
)
pl2 <-df_full %>% group_by(Group) %>%
ggplot(aes(x=BASscore,y=Group, color=Group ))+
geom_boxplot() +
labs (
subtitle = "Body acceptance scores are somehow similar between Tinder Users and non Users, \nthe variation of the score due to the treatments varies among group.",
x= "AIS score",
y= "Group of Users"
)
pl3 <- df_full %>% group_by(Group) %>%
ggplot(aes(x=AISscore,y=Group, color=Group ))+
geom_boxplot() +
labs (
subtitle = "Slightly divergent score for the experimental group of Tinder Users",
x= "AIS score",
y= "Group of Users"
)
gridExtra::grid.arrange(pl1, pl2, pl3)
set.seed(1234)
ses_score <- df %>%
mutate(N = n()) %>%
summarize(SelfEsteemScore = sum(SESscore)/N) %>% unique()
bas_score <- df %>%
mutate(N = n()) %>%
summarize(BASScore = sum(BASscore)/N) %>% unique()
ais_score <- df %>%
mutate(N = n()) %>%
summarize(AISScore= sum(AISscore)/N) %>% unique()
scores <- left_join(ses_score,bas_score)
scores <- left_join(scores, ais_score)
scores <- scores[c(1, 2, 4, 3),]
scores %>%  t() %>% kable() %>% kable_styling()
set.seed(1234)
dfUser <- df_full %>% filter(Group == c("User", "TUser")) %>%group_by(TinderMainScore)
ses_scoreU <- dfUser %>%
mutate(N = n()) %>%
summarize(SelfEsteemScore = sum(SESscore)/N) %>% unique()
bas_scoreU <- dfUser %>%
mutate(N = n()) %>%
summarize(BASScore = sum(BASscore)/N) %>% unique()
ais_scoreU <- dfUser %>%
mutate(N = n()) %>%
summarize(AISScore= sum(AISscore)/N) %>% unique()
scoresU <- left_join(ses_scoreU,bas_scoreU)
scoresU <- left_join(scoresU, ais_scoreU)
scoresU <- scoresU[c(1, 5, 4, 2, 3), ]
scoresU %>% t() %>% kable() %>% kable_styling()
library(tidyverse)
df_full$Group <- recode_factor(df_full$Group,
NonUser = 1,
TNonUser = 2,
User = 3,
TUser = 4)
TNonUser <- df_full %>% filter(Group == "2")
NonUser <- df_full %>% filter(Group == "1")
TUser <- df_full %>% filter(Group == "4")
User <- df_full %>% filter(Group == "3")
TinderUsers <- rbind2(TUser,User, deparse.level = 0)
mymodUserSES <- lm(SESscore ~ Group, data = df_full)
broom::tidy(mymodUserSES) %>%
mutate(p.value = paste(round(p.value, 4), pval_star(p.value))) %>%
select(-statistic) %>%
kable(
caption = "Significance of the self-esteem score", digits = 2
) %>%
kable_styling(
bootstrap_options = "striped"
)
mymodUserBAS <- lm(BASscore ~ Group, data = df_full)
broom::tidy(mymodUserBAS) %>%
mutate(p.value = paste(round(p.value, 4), pval_star(p.value))) %>%
select(-statistic) %>%
kable(
caption = "Significance of the body acceptance score", digits = 2
) %>%
kable_styling(
bootstrap_options = "striped"
)
mymodUserAIS <- lm(AISscore ~ Group, data = df_full)
broom::tidy(mymodUserAIS) %>%
mutate(p.value = paste(round(p.value, 4), pval_star(p.value))) %>%
select(-statistic) %>%
kable(
caption = "Significance of the body impulsiveness score", digits = 2
) %>%
kable_styling(
bootstrap_options = "striped"
)
TinderUsers <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
index.tr <- sample(size=round(0.8*length(TinderUsers)), x=c(1:length(TinderUsers)), replace=FALSE)
df.tr <- TinderUsers[index.tr,]
df.te <- TinderUsers[-index.tr,]
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
pred.te <-  predict(mymod, TinderUsers)
plot(TinderUsers$Group, pred.te)
pred.te
library(caret)
TinderUsers$Group
confusionMatrix(data=pred.te$predictions, reference = TinderUsers$Group)
plot(TinderUsers$Group, pred.te, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
abline(h=3.5)
abline(h= 3.5)
TinderUsers <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
index.tr <- sample(size=round(0.8*length(TinderUsers)), x=c(1:length(TinderUsers)), replace=FALSE)
df.tr <- TinderUsers[index.tr,]
df.te <- TinderUsers[-index.tr,]
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
pred.te <-  predict(mymod, TinderUsers)
plot(TinderUsers$Group, pred.te, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
abline(h= 3.5, col =red)
plot(TinderUsers$Group, pred.te, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions") + abline(h= 3.5, col =red)
plot(TinderUsers$Group, pred.te, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions") + line(h= 3.5, col =red)
line(h= 3.5, col =red)
plot(TinderUsers$Group, pred.te, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
line(h= 3.5, col =red)
TinderNonUsers <- rbind2(TNonUser,Nonser, deparse.level = 0)
TinderNonUsers <- rbind2(TNonUser,NonUser, deparse.level = 0)
TinderNonUsers$Group <- as.numeric(as.character(TinderUsers$Group))
index.tr <- sample(size=round(0.8*length(TinderNonUsers)), x=c(1:length(TinderUsers)), replace=FALSE)
df.tr <- TinderUsers[index.tr,]
df.te <- TinderUsers[-index.tr,]
mymod2 <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderNonUsers)
levels(TinderNonUsers$AISscore)
levels(TinderNonUsers$BASscore)
TinderNonUsers
View(TinderNonUsers)
mymod2 <- glm(Group ~ SESscore + BASscore + AISscore, family = "gaussian", data = TinderNonUsers)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
TinderNonUsers
TinderNonUsers$Group <- as.numeric(as.character(TinderUsers$Group))
mymod2 <- glm(Group ~ SESscore + BASscore + AISscore, family = "gaussian", data = TinderNonUsers)
mymod2 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial, data = TinderNonUsers)
pred.te <-  predict(mymod, TinderUsers)
mymod2 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial, data = TinderNonUsers)
pred.te2 <-  predict(mymod2, TinderUsers)
plot(TinderNonUsers$Group, pred.te2, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
plot(pred.te2)
mymod2 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial(link = "logit"), data = TinderNonUsers)
pred.te2 <-  predict(mymod2, TinderUsers)
plot(pred.te2)
mymod2 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial(link = "prob it"), data = TinderNonUsers)
mymod2 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial(link = "probit"), data = TinderNonUsers)
pred.te2 <-  predict(mymod2, TinderUsers)
plot(pred.te2)
pred.te2 <-  predict(mymod2, TinderUsers, type="response")
plot(pred.te2)
mymod2 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial(link = "logit"), data = TinderNonUsers)
pred.te2 <-  predict(mymod2, TinderUsers, type="response")
plot(pred.te2)
plot(TinderNonUsers$Group, pred.te2, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
mymod2 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial(link = "logit"), data = TinderNonUsers)
pred.te2 <-  predict(mymod2, TinderNonUsers, type="response")
plot(pred.te2)
plot(TinderNonUsers$Group, pred.te2, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
line(h= 3.5, col =red)
plot(TinderNonUsers$Group, pred.te2, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
broom::tidy(mymod2) %>%
mutate(p.value = paste(round(p.value, 4), pval_star(p.value))) %>%
select(-statistic) %>%
kable(
caption = "Significance of the body impulsiveness score", digits = 2
) %>%
kable_styling(
bootstrap_options = "striped"
)
broom::tidy(step(mymod,
direction = c("both")))
broom::tidy(mymod2) %>%
mutate(p.value = paste(round(p.value, 4), pval_star(p.value))) %>%
select(-statistic) %>%
kable(
caption = "Significance of the body impulsiveness score", digits = 2
) %>%
kable_styling(
bootstrap_options = "striped"
)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
TinderUsers <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
pred.te <-  predict(mymod, TinderUsers)
plot(TinderUsers$Group, pred.te, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
line(h= 3.5, col =red)
TinderUsers <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
pred.te <-  predict(mymod, TinderUsers)
plot(TinderUsers$Group, pred.te, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
broom::tidy(mymod) %>%
mutate(p.value = paste(round(p.value, 4), pval_star(p.value))) %>%
select(-statistic) %>%
kable(
caption = "Significance of the body impulsiveness score", digits = 2
) %>%
kable_styling(
bootstrap_options = "striped"
)
broom::tidy(step(mymod,
direction = c("both")))
TUser1 <- df_full %>% filter(Group == "1")
User1 <- df_full %>% filter(Group == "0")
TinderUsers1 <- rbind2(TUser1, User1)
TinderUsers1 <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
TinderUsers1$Group <- as.numeric(as.character(TinderUsers$Group))
mymod1 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial(link = "logit"), data = TinderUsers1)
TinderUsers1$Group
TUser1 <- df_full %>% filter(Group == "1")
User1 <- df_full %>% filter(Group == "0")
TinderUsers1 <- rbind2(TUser1, User1)
TinderUsers1 <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers1$Group <- as.numeric(as.character(TinderUsers$Group))
TinderUsers1$Group
TinderUsers1
TUser1
TinderUsers1<- rbind2(TUser1, User1, deparse.level = 0)
TinderUsers1 <- TinderUsers %>% filter(TinderMainScore != "SocializingScore")
TinderUsers1$Group <- as.numeric(as.character(TinderUsers$Group))
TinderUsers1$Group
TinderUsers1<- rbind2(TUser1, User1, deparse.level = 0)
TinderUsers1 <- TinderUsers1 %>% filter(TinderMainScore != "SocializingScore")
TinderUsers1$Group <- as.numeric(as.character(TinderUsers$Group))
TinderUsers1$Group
mymod1 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial(link = "logit"), data = TinderUsers1)
TinderUsers1
TUser1 <- df_full %>% filter(Group == "1")
User1 <- df_full %>% filter(Group == "0")
TinderUsers1<- rbind2(TUser1, User1, deparse.level = 0)
TinderUsers1 <- TinderUsers1 %>% filter(TinderMainScore != "SocializingScore")
TinderUsers1
TinderUsers1<- rbind2(TUser1, User1, deparse.level = 0)
TinderUsers1 <- TinderUsers1 %>% filter(TinderMainScore != "SocializingScore")
TinderUsers1<- rbind2(TUser1, User1, deparse.level = 0)
mymod1 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial(link = "logit"), data = TinderUsers1)
pred.te <-  predict(mymod1, TinderUsers)
pred.te1 <-  predict(mymod1, TinderUsers)
plot(TinderUsers1$Group, pred.te1, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
pred.te1 <-  predict(mymod1, TinderUsers)
plot(TinderUsers1$Group, pred.te1, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
pred.te1 <-  predict(mymod1, TinderUsers1)
plot(TinderUsers1$Group, pred.te1, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
plot(pred.te1)
pred.te1
pred.te1 <-  predict(mymod1, TinderUsers1)
pred.te1 <-  predict(mymod1, TinderUsers1, type = "reponse")
pred.te1 <-  predict(mymod1, TinderUsers1, type="response")
pred.te1
plot(TinderUsers1$Group, pred.te1, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
mymod1 <- glm(Group ~ SESscore + BASscore + AISscore, family=binomial(link = "logit"), data = TinderUsers1)
pred.te1 <-  predict(mymod1, TinderUsers1, type="response")
pred.te1 <-  predict(mymod1, TinderUsers1, type="response")
pred.te1
plot(TinderUsers1$Group, pred.te1, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
broom::tidy(mymod1) %>%
mutate(p.value = paste(round(p.value, 4), pval_star(p.value))) %>%
select(-statistic) %>%
kable(
caption = "Significance of the body impulsiveness score", digits = 2
) %>%
kable_styling(
bootstrap_options = "striped"
)
broom::tidy(step(mymod,
direction = c("both")))
mymod1 <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link = "logit"), data = TinderUsers1)
TinderUsers1 <- filter(TinderMainScore != "Socializing")
TinderUsers1 <- filter(TinderMainMotive != "Socializing")
broom::tidy(mymod) %>%
mutate(p.value = paste(round(p.value, 4), pval_star(p.value))) %>%
select(-statistic) %>%
kable(
caption = "Significance of the body impulsiveness score", digits = 2
) %>%
kable_styling(
bootstrap_options = "striped"
)
TinderUsers$Group <- recode_factor(TinderUsers$Group,
3 = 0,
TinderUsers$Group <- recode_factor(TinderUsers$Group,
3 == 0,
4 = 1)
TinderUsers$Group <- recode_factor(TinderUsers$Group,
"3" = "0",
"4" = "1")
TinderUsers <- filter(TinderMainMotive != "Socializing")
mymod1 <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family=binomial(link = "logit"), data = TinderUsers)
pred.te1 <-  predict(mymod1, TinderUsers1, type="response")
pred.te1
plot(TinderUsers1$Group, pred.te1, main = "Comparing the predictions (y) with the real values (x)", sub = "Not performing so well...", xlab = "Real values of groups (3: control group, 4: experimental group)", ylab = "Predictions")
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
library(tidyverse)
df_full$Group <- recode_factor(df_full$Group,
NonUser = 1,
TNonUser = 2,
User = 3,
TUser = 4)
TNonUser <- df_full %>% filter(Group == "2")
NonUser <- df_full %>% filter(Group == "1")
TUser <- df_full %>% filter(Group == "4")
User <- df_full %>% filter(Group == "3")
TinderUsers <- rbind2(TUser,User, deparse.level = 0)
TinderNonUsers <- rbind2(TNonUser,NonUser, deparse.level = 0)
mymodUserSES <- lm(SESscore ~ Group, data = df_full)
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
TinderUsers <- TinderUsers %>%filter(TinderMainMotive != "Socializing")
TinderUsers <- TinderUsers %>%filter(TinderMainScore != "Socializing")
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
TinderUsers$Group <- as.numeric(as.character(TinderUsers$Group))
TinderUsers <- TinderUsers %>%filter(TinderMainScore != "Socializing")
mymod <- glm(Group ~ SESscore + BASscore + AISscore + TinderMainScore, family = "gaussian", data = TinderUsers)
